[platformio]
	#default_envs = DO118_STM32F103C8_factory
	include_dir = ./
	src_dir = ./
	boards_dir = Boards
	test_dir = Tests
	description = "USB HID Device"
	extra_configs =

[env]
	monitor_speed = 115200
	monitor_filters =
		time

[debug_uart]
	build_flags =
		"-D DEBUGGING_ENABLE"
	build_src_filter =
	debug_build_flags =
		-O0
		-ggdb3
		-g3
	board_ldflags =
		-u _printf_float

[usb_hid_device]
	platform = ststm32@15.4.1
	board = STM32F072C8T6
	board_build.ldscript = Libraries/STM32F0xx/Linker/STM32F072C8Tx_FLASH.ld
	upload_protocol = jlink
	upload_flags =
	upload_command =
	debug_tool = jlink
	debug_svd_path = Libraries/STM32F0xx/SVD/STM32F0x2.svd
	build_flags =
		"-D HSE_VALUE=0"
		"-D USE_HAL_DRIVER"
		-includeLibraries/STM32F0xx/Include/stm32f0xx.h
		-includeLibraries/Debug/debug.h
		-ICore
		-ILibraries/CMSIS/Include
		-ILibraries/STM32F0xx/Include
		-ILibraries/STM32F0xx_HAL_Driver/Include
		#-ILibraries/STM32_USB_Device_Library/Class/CustomHID/Inc
		-ILibraries/STM32_USB_Device_Library/Class/HID/Inc
		-ILibraries/STM32_USB_Device_Library/Core/Inc
		-ILibraries/USB_DEVICE/Inc
		-ICore/UART1
		-ICore/ADC
		-ICore/I2C
		-lc
		-lm
		-lnosys
		-Os

	build_src_filter =
		-<**/*>		# Исключаем все исходные файлы.

		# Файлы инициализации.
		+<Libraries/STM32F0xx/Source/startup/startup_stm32f042x6.s>
		+<Libraries/STM32F0xx/Source/system_stm32f0xx.c>
		+<Core>
		+<Libraries/Debug/debug.c>

		# Библиотека HAL.
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_cortex.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_rcc.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_rcc_ex.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_pcd.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_pcd_ex.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_gpio.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_can.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_tim.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_tim_ex.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_usart.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_uart.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_uart_ex.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_dma.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_flash.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_flash_ex.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_ll_usb.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_adc.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_adc_ex.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_i2c.c>
		+<Libraries/STM32F0xx_HAL_Driver/Source/stm32f0xx_hal_i2c_ex.c>

		# Библиотека USB.
		+<Libraries/STM32_USB_Device_Library/Core/Src>
		#+<Libraries/STM32_USB_Device_Library/Class/CustomHID/Src>
		#-<Libraries/STM32_USB_Device_Library/Class/CustomHID/Src/usbd_customhid_if_template.c>
		+<Libraries/STM32_USB_Device_Library/Class/HID/Src>
		-<Libraries/STM32_USB_Device_Library/Core/Src/usbd_conf_template.c>
		-<Libraries/STM32_USB_Device_Library/Core/Src/usbd_desc_template.c>
		+<Libraries/USB_DEVICE/Src>


		# UART
		+<Core/UART1>

		+<Core/ADC>
		+<Core/I2C>

	board_ldflags =
		-Wl,-Map=$BUILD_DIR/firmware.map
		--specs=nano.specs

	extra_scripts =
		Scripts/board_firmware.py

[env:debug]
	extends = usb_hid_device
	build_flags =
		${usb_hid_device.build_flags}
		${debug_uart.build_flags}


[env:dfu]
	extends = usb_hid_device
	upload_protocol = custom
	upload_flags =
		# DFU device Vendor and Product IDs.
		-d
		#0x1EAF:0x0003,0x1EAF:0x0004
		,

		# Specify the altsetting of the DFU interface by name or by number.
		-a
		0

		# Target address for raw binary.
		-s
		0x08000000:leave

		# Path to binary file.
		-D
		#"D:\YandexDisk\Project\CAN-Link-Software\.pio\build\pcan_fw\firmware.bin"
		$BUILD_DIR/firmware.bin

		# Reset after uploading.
		-R

	# C:\Users\USER\.platformio\packages\tool-dfuutil\bin\dfu-util
	upload_command = $PROJECT_PACKAGES_DIR/tool-dfuutil/bin/dfu-util $UPLOAD_FLAGS


